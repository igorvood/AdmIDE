package ru.vood.Plugin.admPlugin.aspectJ;

import org.aspectj.lang.ProceedingJoinPoint;
import ru.vood.Plugin.admPlugin.spring.entity.VBdObjectEntity;

import java.sql.Connection;

public aspect DDLCreateAspect {

//    pointcut publicOperation(): execution(public * *.*(..));
//
//    Object around(): publicOperation() {
//        System.out.println(thisJoinPointStaticPart.getClass());
//        long start = System.nanoTime();
//        Object ret = proceed();
//        long end = System.nanoTime();
//        System.out.println(thisJoinPointStaticPart.getClass() +" "+ thisJoinPointStaticPart.getSignature() + " took " + (end - start) + " nanoseconds");
//        return ret;
//    }

    pointcut addOrEditObj(VBdObjectEntity objectEntity): execution(* ru.vood.Plugin.dialogs.ADMDialog.addOrEdit(..))
            && target(objectEntity);


    Object around(VBdObjectEntity objectEntity): addOrEditObj(objectEntity) {
        System.out.println("qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq" + thisJoinPointStaticPart.getClass().toString());
        System.out.println(thisJoinPointStaticPart.getSignature().getModifiers());
        System.out.println(thisJoinPointStaticPart.getSignature().getDeclaringType());
        System.out.println("aaaaaaaaaa " + objectEntity.toString());

        long start = System.nanoTime();
        Object ret = null;
        try {
            ret = proceed(objectEntity);
        } catch (Throwable throwable) {
            throwable.printStackTrace();
        }
        long end = System.nanoTime();
        System.out.println(thisJoinPointStaticPart.getClass() + " " + thisJoinPointStaticPart.getSignature() + " took " + (end - start) + " nanoseconds");
        return ret;
    }

}
